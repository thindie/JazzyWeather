plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id("com.google.dagger.hilt.android")
}

android {
    namespace 'com.example.thindie.jazzyweather'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.thindie.jazzyweather"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += '-opt-in=kotlin.RequiresOptIn'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.4.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {
    implementation project(path: ':core:network')
    implementation project(path: ':core:local-raw-resources')
    implementation project(path: ':core:common')
    implementation project(path: ':core:database')

    implementation project(path: ':core:data:local-resourse-observer')
    implementation project(path: ':core:data:weather-fetcher')
    implementation project(path: ':core:data')


    implementation project(path: ':core:domain')
    implementation project(path: ':core:domain:weather-provider')
    implementation project(path: ':core:domain:local-resource-observer')

    implementation project(path: ':core:presentation')
    implementation project(path: ':core:presentation:location-choser')
    implementation project(path: ':core:presentation:weather-presenter')
    implementation project(path: ':core:presentation:design-system')


    implementation("com.google.dagger:hilt-android:2.45")
    kapt("com.google.dagger:hilt-android-compiler:2.44.2")

    implementation "androidx.compose.ui:ui:1.4.2"
    implementation 'androidx.compose.material:material:1.4.2'

//
    implementation 'androidx.core:core-ktx:1.10.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.1'
    implementation 'androidx.activity:activity-compose:1.7.1'
    def composeBom = platform('androidx.compose:compose-bom:2022.12.00')
    implementation composeBom
    androidTestImplementation composeBom
    implementation("androidx.lifecycle:lifecycle-runtime-compose:2.6.1")
    implementation 'androidx.compose.material3:material3'
    implementation "androidx.compose.material3:material3-window-size-class:1.0.1"

    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    implementation "androidx.navigation:navigation-compose:2.5.3"

    implementation 'androidx.compose.material:material-icons-core:1.4.2'
    implementation 'androidx.compose.material:material-icons-extended:1.4.2'
    //

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.3.3"
    debugImplementation "androidx.compose.ui:ui-tooling:1.3.3"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.3.3"
}